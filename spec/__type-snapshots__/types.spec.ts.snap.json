{"getName":"string","getAge":"number","getAppearance":"Appearance","getBirthMarks":"string[]","getEyeColor":"string","getHairColor":"HairColor","getOtherColors":"string[]","getPrimary":"string","getSecondary":"string | undefined","getNoseColor":"string | undefined","getFavoriteToys":"string[]","getHasPuppies":"boolean","getLuckNumbers":"number[]","getSterilizedAt":"string | undefined","getVaccines":"Vaccine[]","getVaccines[0]":"Vaccine","getError":"string | number | boolean | string[] | (() => string) | (() => string) | (() => string | undefined) | ((...items: string[]) => number) | { (...items: ConcatArray<string>[]): string[]; (...items: (string | ConcatArray<string>)[]): string[]; } | ((separator?: string | undefined) => string) | (() => string[]) | (() => string | undefined) | ((start?: number | undefined, end?: number | undefined) => string[]) | ((compareFn?: ((a: string, b: string) => number) | undefined) => string[]) | { (start: number, deleteCount?: number | undefined): string[]; (start: number, deleteCount: number, ...items: string[]): string[]; } | ((...items: string[]) => number) | ((searchElement: string, fromIndex?: number | undefined) => number) | ((searchElement: string, fromIndex?: number | undefined) => number) | { <S extends string>(predicate: (value: string, index: number, array: string[]) => value is S, thisArg?: any): this is S[]; (predicate: (value: string, index: number, array: string[]) => unknown, thisArg?: any): boolean; } | ((predicate: (value: string, index: number, array: string[]) => unknown, thisArg?: any) => boolean) | ((callbackfn: (value: string, index: number, array: string[]) => void, thisArg?: any) => void) | (<U>(callbackfn: (value: string, index: number, array: string[]) => U, thisArg?: any) => U[]) | { <S extends string>(predicate: (value: string, index: number, array: string[]) => value is S, thisArg?: any): S[]; (predicate: (value: string, index: number, array: string[]) => unknown, thisArg?: any): string[]; } | { (callbackfn: (previousValue: string, currentValue: string, currentIndex: number, array: string[]) => string): string; (callbackfn: (previousValue: string, currentValue: string, currentIndex: number, array: string[]) => string, initialValue: string): string; <U>(callbackfn: (previousValue: U, currentValue: string, currentIndex: number, array: string[]) => U, initialValue: U): U; } | { (callbackfn: (previousValue: string, currentValue: string, currentIndex: number, array: string[]) => string): string; (callbackfn: (previousValue: string, currentValue: string, currentIndex: number, array: string[]) => string, initialValue: string): string; <U>(callbackfn: (previousValue: U, currentValue: string, currentIndex: number, array: string[]) => U, initialValue: U): U; } | { <S extends string>(predicate: (this: void, value: string, index: number, obj: string[]) => value is S, thisArg?: any): S | undefined; (predicate: (value: string, index: number, obj: string[]) => unknown, thisArg?: any): string | undefined; } | ((predicate: (value: string, index: number, obj: string[]) => unknown, thisArg?: any) => number) | ((value: string, start?: number | undefined, end?: number | undefined) => string[]) | ((target: number, start: number, end?: number | undefined) => string[]) | (() => IterableIterator<[number, string]>) | (() => IterableIterator<number>) | (() => IterableIterator<string>) | ((searchElement: string, fromIndex?: number | undefined) => boolean) | number[] | (() => string) | (() => string) | (() => number | undefined) | ((...items: number[]) => number) | { (...items: ConcatArray<number>[]): number[]; (...items: (number | ConcatArray<number>)[]): number[]; } | ((separator?: string | undefined) => string) | (() => number[]) | (() => number | undefined) | ((start?: number | undefined, end?: number | undefined) => number[]) | ((compareFn?: ((a: number, b: number) => number) | undefined) => number[]) | { (start: number, deleteCount?: number | undefined): number[]; (start: number, deleteCount: number, ...items: number[]): number[]; } | ((...items: number[]) => number) | ((searchElement: number, fromIndex?: number | undefined) => number) | ((searchElement: number, fromIndex?: number | undefined) => number) | { <S extends number>(predicate: (value: number, index: number, array: number[]) => value is S, thisArg?: any): this is S[]; (predicate: (value: number, index: number, array: number[]) => unknown, thisArg?: any): boolean; } | ((predicate: (value: number, index: number, array: number[]) => unknown, thisArg?: any) => boolean) | ((callbackfn: (value: number, index: number, array: number[]) => void, thisArg?: any) => void) | (<U>(callbackfn: (value: number, index: number, array: number[]) => U, thisArg?: any) => U[]) | { <S extends number>(predicate: (value: number, index: number, array: number[]) => value is S, thisArg?: any): S[]; (predicate: (value: number, index: number, array: number[]) => unknown, thisArg?: any): number[]; } | { (callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: number[]) => number): number; (callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: number[]) => number, initialValue: number): number; <U>(callbackfn: (previousValue: U, currentValue: number, currentIndex: number, array: number[]) => U, initialValue: U): U; } | { (callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: number[]) => number): number; (callbackfn: (previousValue: number, currentValue: number, currentIndex: number, array: number[]) => number, initialValue: number): number; <U>(callbackfn: (previousValue: U, currentValue: number, currentIndex: number, array: number[]) => U, initialValue: U): U; } | { <S extends number>(predicate: (this: void, value: number, index: number, obj: number[]) => value is S, thisArg?: any): S | undefined; (predicate: (value: number, index: number, obj: number[]) => unknown, thisArg?: any): number | undefined; } | ((predicate: (value: number, index: number, obj: number[]) => unknown, thisArg?: any) => number) | ((value: number, start?: number | undefined, end?: number | undefined) => number[]) | ((target: number, start: number, end?: number | undefined) => number[]) | (() => IterableIterator<[number, number]>) | (() => IterableIterator<number>) | (() => IterableIterator<number>) | ((searchElement: number, fromIndex?: number | undefined) => boolean) | Vaccine[] | (() => string) | (() => string) | (() => Vaccine | undefined) | ((...items: Vaccine[]) => number) | { (...items: ConcatArray<Vaccine>[]): Vaccine[]; (...items: (Vaccine | ConcatArray<Vaccine>)[]): Vaccine[]; } | ((separator?: string | undefined) => string) | (() => Vaccine[]) | (() => Vaccine | undefined) | ((start?: number | undefined, end?: number | undefined) => Vaccine[]) | ((compareFn?: ((a: Vaccine, b: Vaccine) => number) | undefined) => Vaccine[]) | { (start: number, deleteCount?: number | undefined): Vaccine[]; (start: number, deleteCount: number, ...items: Vaccine[]): Vaccine[]; } | ((...items: Vaccine[]) => number) | ((searchElement: Vaccine, fromIndex?: number | undefined) => number) | ((searchElement: Vaccine, fromIndex?: number | undefined) => number) | { <S extends Vaccine>(predicate: (value: Vaccine, index: number, array: Vaccine[]) => value is S, thisArg?: any): this is S[]; (predicate: (value: Vaccine, index: number, array: Vaccine[]) => unknown, thisArg?: any): boolean; } | ((predicate: (value: Vaccine, index: number, array: Vaccine[]) => unknown, thisArg?: any) => boolean) | ((callbackfn: (value: Vaccine, index: number, array: Vaccine[]) => void, thisArg?: any) => void) | (<U>(callbackfn: (value: Vaccine, index: number, array: Vaccine[]) => U, thisArg?: any) => U[]) | { <S extends Vaccine>(predicate: (value: Vaccine, index: number, array: Vaccine[]) => value is S, thisArg?: any): S[]; (predicate: (value: Vaccine, index: number, array: Vaccine[]) => unknown, thisArg?: any): Vaccine[]; } | { (callbackfn: (previousValue: Vaccine, currentValue: Vaccine, currentIndex: number, array: Vaccine[]) => Vaccine): Vaccine; (callbackfn: (previousValue: Vaccine, currentValue: Vaccine, currentIndex: number, array: Vaccine[]) => Vaccine, initialValue: Vaccine): Vaccine; <U>(callbackfn: (previousValue: U, currentValue: Vaccine, currentIndex: number, array: Vaccine[]) => U, initialValue: U): U; } | { (callbackfn: (previousValue: Vaccine, currentValue: Vaccine, currentIndex: number, array: Vaccine[]) => Vaccine): Vaccine; (callbackfn: (previousValue: Vaccine, currentValue: Vaccine, currentIndex: number, array: Vaccine[]) => Vaccine, initialValue: Vaccine): Vaccine; <U>(callbackfn: (previousValue: U, currentValue: Vaccine, currentIndex: number, array: Vaccine[]) => U, initialValue: U): U; } | { <S extends Vaccine>(predicate: (this: void, value: Vaccine, index: number, obj: Vaccine[]) => value is S, thisArg?: any): S | undefined; (predicate: (value: Vaccine, index: number, obj: Vaccine[]) => unknown, thisArg?: any): Vaccine | undefined; } | ((predicate: (value: Vaccine, index: number, obj: Vaccine[]) => unknown, thisArg?: any) => number) | ((value: Vaccine, start?: number | undefined, end?: number | undefined) => Vaccine[]) | ((target: number, start: number, end?: number | undefined) => Vaccine[]) | (() => IterableIterator<[number, Vaccine]>) | (() => IterableIterator<number>) | (() => IterableIterator<Vaccine>) | ((searchElement: Vaccine, fromIndex?: number | undefined) => boolean) | Appearance | HairColor | undefined"}
